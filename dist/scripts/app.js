'use strict';

/**
 * File navigation.js.
 *
 * Handles toggling the navigation menu for small screens and enables TAB key
 * navigation support for dropdown menus.
 */
(function () {
	var container, button, menu, links, i, len, focusableElements, firstFocusableElement, lastFocusableElement;

	container = document.getElementById('js-menu--primary');

	// Bail if there is no menu.
	if (!container) {
		return;
	}

	button = container.getElementsByTagName('button')[0];
	if ('undefined' === typeof button) {
		return;
	}

	menu = container.getElementsByTagName('ul')[0];

	// Hide menu toggle button if menu is empty and return early.
	if ('undefined' === typeof menu) {
		button.style.display = 'none';
		return;
	}

	menu.setAttribute('aria-expanded', 'false');
	if (!menu.classList.contains('js-nav-menu')) {
		menu.classList.add('js-nav-menu');
	}

	button.addEventListener('click', function () {
		toggleMenu();

		setFocus();
	});

	// Close menu using Esc key.
	document.addEventListener('keyup', function (event) {
		if (27 === event.keyCode) {
			if (button.classList.contains('is-toggled')) {
				toggleMenu(); // Close menu.
				button.focus();
			}
		}
	});

	// Remove ARIA when on "desktop".
	window.addEventListener('resize', removeAria);

	// Get all the link elements within the menu.
	links = menu.getElementsByTagName('a');

	// Each time a menu link is focused or blurred, toggle focus.
	for (i = 0, len = links.length; i < len; i++) {
		links[i].addEventListener('focus', toggleFocus, true);
		links[i].addEventListener('blur', toggleFocus, true);
	}

	/**
  * Toggle menu classes and ARIA.
  */
	function toggleMenu() {
		container.classList.toggle('is-toggled');

		var expanded = 'false' === button.getAttribute('aria-expanded') ? 'true' : 'false';
		button.setAttribute('aria-expanded', expanded);
		menu.setAttribute('aria-expanded', expanded);
	}

	/**
  * Set focus when nav is open.
  */
	function setFocus() {

		// Bail if menu is not open.
		if (!button.classList.contains('is-toggled')) {
			return;
		}

		// Set focusable elements inside main navigation.
		focusableElements = container.querySelectorAll(['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])']);
		firstFocusableElement = focusableElements[0];
		lastFocusableElement = focusableElements[focusableElements.length - 1];

		// Redirect last Tab to first focusable element.
		lastFocusableElement.addEventListener('keydown', function (e) {
			if (9 === e.keyCode && !e.shiftKey) {
				e.preventDefault();
				button.focus(); // Set focus on first element - that's actually close menu button.
			}
		});

		// Redirect first Shift+Tab to toggle button element.
		firstFocusableElement.addEventListener('keydown', function (e) {
			if (9 === e.keyCode && e.shiftKey) {
				e.preventDefault();
				button.focus(); // Set focus on first element.
			}
		});

		// Redirect Shift+Tab from the toggle button to last focusable element.
		button.addEventListener('keydown', function (e) {
			if (9 === e.keyCode && e.shiftKey) {
				e.preventDefault();
				lastFocusableElement.focus(); // Set focus on last element.
			}
		});
	}

	/**
  * Remove ARIA on "desktop".
  */
	function removeAria() {

		// If menu toggle button have display: none css rule, we're on desktop.
		if ('none' === window.getComputedStyle(button, null).getPropertyValue('display')) {
			button.setAttribute('aria-expanded', 'false');
			menu.setAttribute('aria-expanded', 'false');
		}
	}

	/**
  * Sets or removes .focus class on an element.
  */
	function toggleFocus() {
		var self = this;

		// Move up through the ancestors of the current link until we hit .js-nav-menu.
		while (-1 === self.className.indexOf('js-nav-menu')) {

			// On li elements toggle the class .focus.
			if ('li' === self.tagName.toLowerCase()) {
				if (-1 !== self.className.indexOf('focus')) {
					self.className = self.className.replace(' focus', '');
				} else {
					self.className += ' focus';
				}
			}

			self = self.parentElement;
		}
	}

	/**
  * Toggles `focus` class to allow submenu access on tablets.
  */
	(function (container) {
		var touchStartFn,
		    i,
		    parentLink = container.querySelectorAll('.menu-item-has-children > a, .page_item_has_children > a');

		if ('ontouchstart' in window) {
			touchStartFn = function touchStartFn(e) {
				var menuItem = this.parentNode,
				    i;

				if (!menuItem.classList.contains('focus')) {
					e.preventDefault();
					for (i = 0; i < menuItem.parentNode.children.length; ++i) {
						if (menuItem === menuItem.parentNode.children[i]) {
							continue;
						}
						menuItem.parentNode.children[i].classList.remove('focus');
					}
					menuItem.classList.add('focus');
				} else {
					menuItem.classList.remove('focus');
				}
			};

			for (i = 0; i < parentLink.length; ++i) {
				parentLink[i].addEventListener('touchstart', touchStartFn, false);
			}
		}
	})(container);
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjb250YWluZXIiLCJidXR0b24iLCJtZW51IiwibGlua3MiLCJpIiwibGVuIiwiZm9jdXNhYmxlRWxlbWVudHMiLCJmaXJzdEZvY3VzYWJsZUVsZW1lbnQiLCJsYXN0Rm9jdXNhYmxlRWxlbWVudCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInN0eWxlIiwiZGlzcGxheSIsInNldEF0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZU1lbnUiLCJzZXRGb2N1cyIsImV2ZW50Iiwia2V5Q29kZSIsImZvY3VzIiwid2luZG93IiwicmVtb3ZlQXJpYSIsImxlbmd0aCIsInRvZ2dsZUZvY3VzIiwidG9nZ2xlIiwiZXhwYW5kZWQiLCJnZXRBdHRyaWJ1dGUiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZSIsInNoaWZ0S2V5IiwicHJldmVudERlZmF1bHQiLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInNlbGYiLCJjbGFzc05hbWUiLCJpbmRleE9mIiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsInBhcmVudEVsZW1lbnQiLCJ0b3VjaFN0YXJ0Rm4iLCJwYXJlbnRMaW5rIiwibWVudUl0ZW0iLCJwYXJlbnROb2RlIiwiY2hpbGRyZW4iLCJyZW1vdmUiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQU1FLGFBQVc7QUFDWixLQUFJQSxTQUFKLEVBQWVDLE1BQWYsRUFBdUJDLElBQXZCLEVBQTZCQyxLQUE3QixFQUFvQ0MsQ0FBcEMsRUFBdUNDLEdBQXZDLEVBQTRDQyxpQkFBNUMsRUFBK0RDLHFCQUEvRCxFQUFzRkMsb0JBQXRGOztBQUVBUixhQUFZUyxTQUFTQyxjQUFULENBQXlCLGtCQUF6QixDQUFaOztBQUVBO0FBQ0EsS0FBSyxDQUFFVixTQUFQLEVBQW1CO0FBQ2xCO0FBQ0E7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Q3pDeUMsZUFBV3pDLENBQVgsRUFBY2MsZ0JBQWQsQ0FBZ0MsWUFBaEMsRUFBOEMwQixZQUE5QyxFQUE0RCxLQUE1RDtBQUNBO0FBQ0Q7QUFDRCxFQTNCQyxFQTJCQzVDLFNBM0JELENBQUY7QUE0QkEsQ0E1S0MsR0FBRiIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpbGUgbmF2aWdhdGlvbi5qcy5cbiAqXG4gKiBIYW5kbGVzIHRvZ2dsaW5nIHRoZSBuYXZpZ2F0aW9uIG1lbnUgZm9yIHNtYWxsIHNjcmVlbnMgYW5kIGVuYWJsZXMgVEFCIGtleVxuICogbmF2aWdhdGlvbiBzdXBwb3J0IGZvciBkcm9wZG93biBtZW51cy5cbiAqL1xuKCBmdW5jdGlvbigpIHtcblx0dmFyIGNvbnRhaW5lciwgYnV0dG9uLCBtZW51LCBsaW5rcywgaSwgbGVuLCBmb2N1c2FibGVFbGVtZW50cywgZmlyc3RGb2N1c2FibGVFbGVtZW50LCBsYXN0Rm9jdXNhYmxlRWxlbWVudDtcblxuXHRjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggJ2pzLW1lbnUtLXByaW1hcnknICk7XG5cblx0Ly8gQmFpbCBpZiB0aGVyZSBpcyBubyBtZW51LlxuXHRpZiAoICEgY29udGFpbmVyICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGJ1dHRvbiA9IGNvbnRhaW5lci5nZXRFbGVtZW50c0J5VGFnTmFtZSggJ2J1dHRvbicgKVswXTtcblx0aWYgKCAndW5kZWZpbmVkJyA9PT0gdHlwZW9mIGJ1dHRvbiApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRtZW51ID0gY29udGFpbmVyLmdldEVsZW1lbnRzQnlUYWdOYW1lKCAndWwnIClbMF07XG5cblx0Ly8gSGlkZSBtZW51IHRvZ2dsZSBidXR0b24gaWYgbWVudSBpcyBlbXB0eSBhbmQgcmV0dXJuIGVhcmx5LlxuXHRpZiAoICd1bmRlZmluZWQnID09PSB0eXBlb2YgbWVudSApIHtcblx0XHRidXR0b24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0XHRyZXR1cm47XG5cdH1cblxuXHRtZW51LnNldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnICk7XG5cdGlmICggISBtZW51LmNsYXNzTGlzdC5jb250YWlucyggJ2pzLW5hdi1tZW51JyApICkge1xuXHRcdG1lbnUuY2xhc3NMaXN0LmFkZCggJ2pzLW5hdi1tZW51JyApO1xuXHR9XG5cblx0YnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoICdjbGljaycsIGZ1bmN0aW9uKCkge1xuXHRcdHRvZ2dsZU1lbnUoKTtcblxuXHRcdHNldEZvY3VzKCk7XG5cdH0gKTtcblxuXHQvLyBDbG9zZSBtZW51IHVzaW5nIEVzYyBrZXkuXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoICdrZXl1cCcsIGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRpZiAoIDI3ID09PSBldmVudC5rZXlDb2RlICkge1xuXHRcdFx0aWYgKCBidXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCAnaXMtdG9nZ2xlZCcgKSApIHtcblx0XHRcdFx0dG9nZ2xlTWVudSgpOyAvLyBDbG9zZSBtZW51LlxuXHRcdFx0XHRidXR0b24uZm9jdXMoKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gKTtcblxuXHQvLyBSZW1vdmUgQVJJQSB3aGVuIG9uIFwiZGVza3RvcFwiLlxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ3Jlc2l6ZScsIHJlbW92ZUFyaWEgKTtcblxuXHQvLyBHZXQgYWxsIHRoZSBsaW5rIGVsZW1lbnRzIHdpdGhpbiB0aGUgbWVudS5cblx0bGlua3MgPSBtZW51LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAnYScgKTtcblxuXHQvLyBFYWNoIHRpbWUgYSBtZW51IGxpbmsgaXMgZm9jdXNlZCBvciBibHVycmVkLCB0b2dnbGUgZm9jdXMuXG5cdGZvciAoIGkgPSAwLCBsZW4gPSBsaW5rcy5sZW5ndGg7IGkgPCBsZW47IGkrKyApIHtcblx0XHRsaW5rc1tpXS5hZGRFdmVudExpc3RlbmVyKCAnZm9jdXMnLCB0b2dnbGVGb2N1cywgdHJ1ZSApO1xuXHRcdGxpbmtzW2ldLmFkZEV2ZW50TGlzdGVuZXIoICdibHVyJywgdG9nZ2xlRm9jdXMsIHRydWUgKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBUb2dnbGUgbWVudSBjbGFzc2VzIGFuZCBBUklBLlxuXHQgKi9cblx0ZnVuY3Rpb24gdG9nZ2xlTWVudSgpIHtcblx0XHRjb250YWluZXIuY2xhc3NMaXN0LnRvZ2dsZSggJ2lzLXRvZ2dsZWQnICk7XG5cblx0XHRsZXQgZXhwYW5kZWQgPSAoICdmYWxzZScgPT09IGJ1dHRvbi5nZXRBdHRyaWJ1dGUoICdhcmlhLWV4cGFuZGVkJyApICkgPyAndHJ1ZScgOiAnZmFsc2UnO1xuXHRcdGJ1dHRvbi5zZXRBdHRyaWJ1dGUoICdhcmlhLWV4cGFuZGVkJywgZXhwYW5kZWQgKTtcblx0XHRtZW51LnNldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnLCBleHBhbmRlZCApO1xuXHR9XG5cblx0LyoqXG5cdCAqIFNldCBmb2N1cyB3aGVuIG5hdiBpcyBvcGVuLlxuXHQgKi9cblx0ZnVuY3Rpb24gc2V0Rm9jdXMoKSB7XG5cblx0XHQvLyBCYWlsIGlmIG1lbnUgaXMgbm90IG9wZW4uXG5cdFx0aWYgKCAhIGJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoICdpcy10b2dnbGVkJyApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFNldCBmb2N1c2FibGUgZWxlbWVudHMgaW5zaWRlIG1haW4gbmF2aWdhdGlvbi5cblx0XHRmb2N1c2FibGVFbGVtZW50cyAgICAgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCggWyAnYVtocmVmXScsICdhcmVhW2hyZWZdJywgJ2lucHV0Om5vdChbZGlzYWJsZWRdKScsICdzZWxlY3Q6bm90KFtkaXNhYmxlZF0pJywgJ3RleHRhcmVhOm5vdChbZGlzYWJsZWRdKScsICdidXR0b246bm90KFtkaXNhYmxlZF0pJywgJ2lmcmFtZScsICdvYmplY3QnLCAnZW1iZWQnLCAnW2NvbnRlbnRlZGl0YWJsZV0nLCAnW3RhYmluZGV4XTpub3QoW3RhYmluZGV4Xj1cIi1cIl0pJyBdICk7XG5cdFx0Zmlyc3RGb2N1c2FibGVFbGVtZW50ID0gZm9jdXNhYmxlRWxlbWVudHNbMF07XG5cdFx0bGFzdEZvY3VzYWJsZUVsZW1lbnQgID0gZm9jdXNhYmxlRWxlbWVudHNbZm9jdXNhYmxlRWxlbWVudHMubGVuZ3RoIC0gMV07XG5cblx0XHQvLyBSZWRpcmVjdCBsYXN0IFRhYiB0byBmaXJzdCBmb2N1c2FibGUgZWxlbWVudC5cblx0XHRsYXN0Rm9jdXNhYmxlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCAna2V5ZG93bicsIGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0aWYgKCAoIDkgPT09IGUua2V5Q29kZSAmJiAhIGUuc2hpZnRLZXkgKSApIHtcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRidXR0b24uZm9jdXMoKTsgLy8gU2V0IGZvY3VzIG9uIGZpcnN0IGVsZW1lbnQgLSB0aGF0J3MgYWN0dWFsbHkgY2xvc2UgbWVudSBidXR0b24uXG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdFx0Ly8gUmVkaXJlY3QgZmlyc3QgU2hpZnQrVGFiIHRvIHRvZ2dsZSBidXR0b24gZWxlbWVudC5cblx0XHRmaXJzdEZvY3VzYWJsZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggJ2tleWRvd24nLCBmdW5jdGlvbiggZSApIHtcblx0XHRcdGlmICggKCA5ID09PSBlLmtleUNvZGUgJiYgZS5zaGlmdEtleSApICkge1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdGJ1dHRvbi5mb2N1cygpOyAvLyBTZXQgZm9jdXMgb24gZmlyc3QgZWxlbWVudC5cblx0XHRcdH1cblx0XHR9ICk7XG5cblx0XHQvLyBSZWRpcmVjdCBTaGlmdCtUYWIgZnJvbSB0aGUgdG9nZ2xlIGJ1dHRvbiB0byBsYXN0IGZvY3VzYWJsZSBlbGVtZW50LlxuXHRcdGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCAna2V5ZG93bicsIGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0aWYgKCAoIDkgPT09IGUua2V5Q29kZSAmJiBlLnNoaWZ0S2V5ICkgKSB7XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0bGFzdEZvY3VzYWJsZUVsZW1lbnQuZm9jdXMoKTsgLy8gU2V0IGZvY3VzIG9uIGxhc3QgZWxlbWVudC5cblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cblxuXHQvKipcblx0ICogUmVtb3ZlIEFSSUEgb24gXCJkZXNrdG9wXCIuXG5cdCAqL1xuXHRmdW5jdGlvbiByZW1vdmVBcmlhKCkge1xuXG5cdFx0Ly8gSWYgbWVudSB0b2dnbGUgYnV0dG9uIGhhdmUgZGlzcGxheTogbm9uZSBjc3MgcnVsZSwgd2UncmUgb24gZGVza3RvcC5cblx0XHRpZiAoICdub25lJyA9PT0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIGJ1dHRvbiwgbnVsbCApLmdldFByb3BlcnR5VmFsdWUoICdkaXNwbGF5JyApICkge1xuXHRcdFx0YnV0dG9uLnNldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnICk7XG5cdFx0XHRtZW51LnNldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnICk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIFNldHMgb3IgcmVtb3ZlcyAuZm9jdXMgY2xhc3Mgb24gYW4gZWxlbWVudC5cblx0ICovXG5cdGZ1bmN0aW9uIHRvZ2dsZUZvY3VzKCkge1xuXHRcdHZhciBzZWxmID0gdGhpcztcblxuXHRcdC8vIE1vdmUgdXAgdGhyb3VnaCB0aGUgYW5jZXN0b3JzIG9mIHRoZSBjdXJyZW50IGxpbmsgdW50aWwgd2UgaGl0IC5qcy1uYXYtbWVudS5cblx0XHR3aGlsZSAoIC0xID09PSBzZWxmLmNsYXNzTmFtZS5pbmRleE9mKCAnanMtbmF2LW1lbnUnICkgKSB7XG5cblx0XHRcdC8vIE9uIGxpIGVsZW1lbnRzIHRvZ2dsZSB0aGUgY2xhc3MgLmZvY3VzLlxuXHRcdFx0aWYgKCAnbGknID09PSBzZWxmLnRhZ05hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0aWYgKCAtMSAhPT0gc2VsZi5jbGFzc05hbWUuaW5kZXhPZiggJ2ZvY3VzJyApICkge1xuXHRcdFx0XHRcdHNlbGYuY2xhc3NOYW1lID0gc2VsZi5jbGFzc05hbWUucmVwbGFjZSggJyBmb2N1cycsICcnICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c2VsZi5jbGFzc05hbWUgKz0gJyBmb2N1cyc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0c2VsZiA9IHNlbGYucGFyZW50RWxlbWVudDtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogVG9nZ2xlcyBgZm9jdXNgIGNsYXNzIHRvIGFsbG93IHN1Ym1lbnUgYWNjZXNzIG9uIHRhYmxldHMuXG5cdCAqL1xuXHQoIGZ1bmN0aW9uKCBjb250YWluZXIgKSB7XG5cdFx0dmFyIHRvdWNoU3RhcnRGbiwgaSxcblx0XHRcdHBhcmVudExpbmsgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCggJy5tZW51LWl0ZW0taGFzLWNoaWxkcmVuID4gYSwgLnBhZ2VfaXRlbV9oYXNfY2hpbGRyZW4gPiBhJyApO1xuXG5cdFx0aWYgKCAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cgKSB7XG5cdFx0XHR0b3VjaFN0YXJ0Rm4gPSBmdW5jdGlvbiggZSApIHtcblx0XHRcdFx0dmFyIG1lbnVJdGVtID0gdGhpcy5wYXJlbnROb2RlLFxuXHRcdFx0XHRpO1xuXG5cdFx0XHRcdGlmICggISBtZW51SXRlbS5jbGFzc0xpc3QuY29udGFpbnMoICdmb2N1cycgKSApIHtcblx0XHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBtZW51SXRlbS5wYXJlbnROb2RlLmNoaWxkcmVuLmxlbmd0aDsgKytpICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtZW51SXRlbSA9PT0gbWVudUl0ZW0ucGFyZW50Tm9kZS5jaGlsZHJlbltpXSApIHtcblx0XHRcdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtZW51SXRlbS5wYXJlbnROb2RlLmNoaWxkcmVuW2ldLmNsYXNzTGlzdC5yZW1vdmUoICdmb2N1cycgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bWVudUl0ZW0uY2xhc3NMaXN0LmFkZCggJ2ZvY3VzJyApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdG1lbnVJdGVtLmNsYXNzTGlzdC5yZW1vdmUoICdmb2N1cycgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0Zm9yICggaSA9IDA7IGkgPCBwYXJlbnRMaW5rLmxlbmd0aDsgKytpICkge1xuXHRcdFx0XHRwYXJlbnRMaW5rW2ldLmFkZEV2ZW50TGlzdGVuZXIoICd0b3VjaHN0YXJ0JywgdG91Y2hTdGFydEZuLCBmYWxzZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSggY29udGFpbmVyICkgKTtcbn0gKCkgKTtcbiJdfQ==
